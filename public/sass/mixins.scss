/***** Border Style *******/
@mixin add-border($size, $color, $position){
	@if $position == 'all'{
	 border:$size solid $color;
	} @else if $position == 'top'{
	 border-top:$size solid $color;
	} @else if $position == 'bottom'{
	 border-bottom:$size solid $color;
	} @else if $position == 'left'{
	 border-left:$size solid $color;
	} @else if $position == 'right'{
	 border-right:$size solid $color;
	} @else if $position == 'top-bottom'{
	 border-top:$size solid $color;
	 border-bottom:$size solid $color;
	} @else if $position == 'right-left'{
	 border-left:$size solid $color;
	 border-right:$size solid $color;
	}
}


/* Border Radius */
@mixin border-radius($rad){
	border-radius:$rad;
}


/* transition */
@mixin transition($transition) {
    transition:$transition;
    -webkit-transition:$transition ;
    -moz-transition:$transition;
}

/* Trnasform translate for both X and Y */
@mixin translate($transX,$transY){
	transform: translate($transX,$transY);
}

/* Trnasform translate for X */
@mixin translateX($trans){
	transform: translateX($trans);
}

/* Trnasform translate for Y */
@mixin translateY($trans){
	transform: translateY($trans);
}

// boxshadow

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}


@mixin animation($animation...) {
  -o-animation: $animation;
  -moz-animation: $animation;
  -webkit-animation: $animation;
  animation: $animation;
}

@mixin absPosition ($top: auto, $right: auto, $bottom: auto, $left: auto) {
     position: absolute;
     top: $top;
     right: $right;
     bottom: $bottom;
     left: $left;
}
